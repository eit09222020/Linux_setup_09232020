collection Datatypes:
1)List : List is a mutable object, means changes and modifications are allowed
2)Tuple
3)set
4)Dictionary

1)List : List is a mutable object, means changes and modifications are allowed
         List represnted using [ ]
>>> x=[10,20,30,40,50]
>>> print(x)
[10, 20, 30, 40, 50]
>>> len(x)
5
>>> sum(x)
150
>>> max(x)
50
>>> min(x)
10

modifying list value
>>> x[1]=25
>>> print(x)
[10, 25, 30, 40, 50]

list methods------>append(),extend(),insert(),remove(),pop()
>>> x=[10,20,30,40,50]
>>> x.append(60)
>>> print(x)
[10, 20, 30, 40, 50, 60]
>>> x.insert(2,35)
>>> print(x)
[10, 20, 35, 30, 40, 50, 60]

>>> x.extend(y)
>>> print(x)
[10, 20, 35, 30, 40, 50, 60, 1.5, 2.5, 3.5, 4.5, 5.5]

>>> x.pop(2)
35
>>> print(x)
[10, 20, 30, 40, 50, 60, 1.5, 2.5, 3.5, 4.5, 5.5]

>>> x.remove(40)
>>> print(x)
[10, 20, 30, 50, 60, 1.5, 2.5, 3.5, 4.5, 5.5]

----------------------------------------------------------------------------------------------------------------
2)Tuple: It is immutable, changes and modifications are not allowed
         Tuple reprsented using ( )
ex:

>>> x=(10,20,30,40,50)
>>> y=([10,20,30],[40,50,60],(70,80,90))
>>> print(x[0],type(x[0]))
(10, <type 'int'>)
>>> print(y[0],type(y[0]))
([10, 20, 30], <type 'list'>)
>>> print(y[1],type(y[1]))
([40, 50, 60], <type 'list'>)
>>> print(y[2],type(y[2]))
((70, 80, 90), <type 'tuple'>)
>>> y[0][1]=25
>>> print(y)
([10, 25, 30], [40, 50, 60], (70, 80, 90))


------------------------------------------------------------------------------------------------------------
3)sets: It is a mutable element,changes and modifications are allowed
        set reprsnted using curly braces( { })
        -sets doesnt allow duplicates
        -sets doesnt support indexing
        -in sets insertion order is not preserved, i.e the order in which the elements are insrted and the
         order in which they are stored are not same
 ex:
>>> x={10,20,30,40,50}
>>> print(x)
set([40, 50, 20, 10, 30])
>>> x={10,20,30,40,50,10,20}
>>> len(x)
5
>>> x
set([40, 10, 20, 50, 30])
>>> #adding element
... 
>>> x.add(60)
>>> x
set([40, 10, 50, 20, 60, 30])
>>> #removing element
... 
>>> x.discard(40)
>>> x
set([10, 50, 20, 60, 30])
-----------------------------------------------------------------------------------------------------------------
4)dictionaries: collection of(k,v) pairs
>>> x={"name":"James","age":25}
>>> x
{'age': 25, 'name': 'James'}
>>> #adding a new (k,v)pair
... 
>>> x['sal']=50000
>>> x['city']='chennai'
>>> x
{'city': 'chennai', 'age': 25, 'name': 'James', 'sal': 50000}
>>> #accessing an elemnt ,if u pass the key, you get the value
... 
>>> x['name']
'James'
>>> x['sal']
50000